@import 'tailwindcss';

.cube-container {
    --cubeSize: 10.6rem;
    --cubefinalZPos: 5.3rem;

    @media (width < 48rem) {
        --cubeSize: 8.7rem;
        --cubefinalZPos: 4.35rem;
    }

    @media (width < 40rem) {
        --cubeSize: 6.8rem;
        --cubefinalZPos: 3.4rem;
    }

    @apply size-[var(--cubeSize)];
    perspective: 62.5rem;
}

.cube {
    @apply size-full relative;
    transform-style: preserve-3d;
    transition: transform 0.3s;
}

/* rotate to right */
.cube-side-rotation-1:hover .cube {
    transform: rotateY(-90deg) translateZ(var(--cubefinalZPos)) scale(1);
}

/* rotate to left */
.cube-side-rotation-2:hover .cube {
    transform: rotateY(90deg) translateZ(var(--cubefinalZPos)) scale(1);
}

/* rotate to top */
.cube-side-rotation-3:hover .cube {
    transform: rotateX(-90deg) translateZ(var(--cubefinalZPos)) scale(1);
}

/* rotate to bottom */
.cube-side-rotation-4:hover .cube {
    transform: rotateX(90deg) translateZ(var(--cubefinalZPos)) scale(1);
}

.front,
.right,
.left,
.top,
.bottom {
    @apply size-full absolute grid place-items-center;
}

.right {
    transform: rotateY(90deg) translateX(50%)
        translateZ(calc(var(--cubeSize) / 2));
}

.left {
    transform: rotateY(-90deg) translateX(-50%)
        translateZ(calc(var(--cubeSize) / 2));
}

.top {
    transform: rotateX(90deg) translateY(-50%)
        translateZ(calc(var(--cubeSize) / 2));
}

.bottom {
    transform: rotateX(-90deg) translateY(50%)
        translateZ(calc(var(--cubeSize) / 2));
}

@import 'tailwindcss';

@theme {
    --color-background: var(--background);
    --color-foreground: var(--foreground);
    --color-primary-black: #1e1e1e;
    --color-secondary-black: #2e2e2e;
    --color-dark-font: #444444;

    --container-default: var(--maxScreenWidth);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
    *,
    ::after,
    ::before,
    ::backdrop,
    ::file-selector-button {
        border-color: var(--color-gray-200, currentColor);
    }
}

:root {
    --background: #ffffff;
    --foreground: #171717;
    --maxScreenWidth: 1200px;

    --cubefinalZPos: 5.3rem;
    --cubeSize: 170px;
}

/* TODO: uncomment */
/* * {
    margin: 0;
    box-sizing: border-box;
} */

html {
    scroll-behavior: smooth;
}

body {
    color: var(--foreground);
    background: var(--background);
    font-family: Arial, Helvetica, sans-serif;
}

#presentation {
    background: url('/hero-bg.svg');
}

.navbar {
    max-width: var(--maxScreenWidth);
}

.text-shadow {
    text-shadow: 15px 15px 40px #dadada;
}

.home-section {
    max-width: var(--maxScreenWidth);
}

.cube-container {
    @apply size-[var(--cubeSize)];
    perspective: 1000px;
}

.cube {
    @apply size-full relative;
    transform-style: preserve-3d;
    transition: transform 0.3s;
}

/* rotate to right */
.cube-side-rotation-1:hover .cube {
    transform: rotateY(-90deg) translateZ(var(--cubefinalZPos)) scale(1);
}

/* rotate to left */
.cube-side-rotation-2:hover .cube {
    transform: rotateY(90deg) translateZ(var(--cubefinalZPos)) scale(1);
}

/* rotate to top */
.cube-side-rotation-3:hover .cube {
    transform: rotateX(-90deg) translateZ(var(--cubefinalZPos)) scale(1);
}

/* rotate to bottom */
.cube-side-rotation-4:hover .cube {
    transform: rotateX(90deg) translateZ(var(--cubefinalZPos)) scale(1);
}

.front,
.right,
.left,
.top,
.bottom {
    width: 100%;
    height: 100%;
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
}

.right {
    transform: rotateY(90deg) translateX(50%)
        translateZ(calc(var(--cubeSize) / 2));
}

.left {
    transform: rotateY(-90deg) translateX(-50%)
        translateZ(calc(var(--cubeSize) / 2));
}

.top {
    transform: rotateX(90deg) translateY(-50%)
        translateZ(calc(var(--cubeSize) / 2));
}

.bottom {
    transform: rotateX(-90deg) translateY(50%)
        translateZ(calc(var(--cubeSize) / 2));
}

.scroller,
article {
    @apply size-full;
    margin: auto;
}

/* These determine the scroll distance for change  */
.scroller {
    height: 100vh;
}

@supports (animation-timeline: scroll()) {
    article {
        animation: journey both linear;
    }

    article {
        --origin: 0 100%;
        --via: 0 0;
        --destination: 0 0;
        --start: 0;
        --mid: 1;
        --end: 0;
    }
    article:nth-of-type(1) {
        --origin: 0 0;
        --via: 0 0;
        --destination: 0 0;
        --start: 1;
        --end: 0;
    }
    article:nth-last-of-type(1) {
        --destination: 0 0;
        --end: 1;
    }

    .project-content {
        animation: fade-in both linear;
    }

    @keyframes journey {
        0% {
            translate: var(--origin);
        }
        50% {
            translate: var(--destination);
        }
        100% {
            translate: var(--destination);
        }
    }

    @keyframes fade-in {
        0% {
            opacity: 0;
            translate: var(--content-origin);
        }
        40% {
            opacity: 1;
            translate: 0 0;
        }
        100% {
            opacity: 1;
            translate: 0 0;
        }
    }
}

.loading li {
    animation: loading-journey 2s infinite linear;
}

.loading li:nth-of-type(1) {
    --top-origin: 0;
    --top-via-1: 100%;
    --top-via-2: 100%;

    --left-origin: 50%;
    --left-via-1: 0;
    --left-via-2: 100%;

    --translation-origin: -50% 0;
    --translation-via-1: 0 -100%;
    --translation-via-2: -100% -100%;
}
.loading li:nth-of-type(2) {
    --top-origin: 100%;
    --top-via-1: 100%;
    --top-via-2: 0;

    --left-origin: 0;
    --left-via-1: 100%;
    --left-via-2: 50%;

    --translation-origin: 0 -100%;
    --translation-via-1: -100% -100%;
    --translation-via-2: -50% 0;
}
.loading li:nth-of-type(3) {
    --top-origin: 100%;
    --top-via-1: 0;
    --top-via-2: 100%;

    --left-origin: 100%;
    --left-via-1: 50%;
    --left-via-2: 0;

    --translation-origin: -100% -100%;
    --translation-via-1: -50% 0;
    --translation-via-2: 0 -100%;
}

@keyframes loading-journey {
    0%,
    100% {
        top: var(--top-origin);
        left: var(--left-origin);
        translate: var(--translation-origin);
    }
    33% {
        top: var(--top-via-1);
        left: var(--left-via-1);
        translate: var(--translation-via-1);
    }
    66% {
        top: var(--top-via-2);
        left: var(--left-via-2);
        translate: var(--translation-via-2);
    }
}
